/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ementor;

import com.itextpdf.text.Document;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.awt.Desktop;
import java.io.File;
import java.io.FileOutputStream;
import java.text.DateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Vincenzo
 */
public class Cadastre extends javax.swing.JFrame {

    static ArrayList<Aluno> dadosAluno = new ArrayList();
    static ArrayList<Professor> dadosProfessor = new ArrayList();

    public static void dadosAlunos() {
        DefaultTableModel Tabela = (DefaultTableModel) TabelaAlunos.Tabela_Alunos.getModel();
        for (Aluno obj : dadosAluno) {
            Tabela.addRow(new Object[]{obj.nome, obj.CPF,
                obj.data_nascimento,
                obj.telefone,
                obj.getMatricula(),
                obj.getPeriodo()});
        }
    }

    public static void dadosProfessores() {
        DefaultTableModel Tabela = (DefaultTableModel) TabelaProfessores.Tabela_Professores.getModel();
        for (Professor obj : dadosProfessor) {
            Tabela.addRow(new Object[]{obj.nome, obj.CPF,
                obj.data_nascimento,
                obj.telefone,
                obj.getData_admissao(),
                obj.getSalario_bruto(),
                obj.CargoChefia, obj.CargoCoordenador});
        }
    }

    public void niveis() {
        ConexoesMySQL con = new ConexoesMySQL();
        int nivel = con.recuperaNivel();
        if (nivel == 1) {
            ButtonCadastro.setEnabled(false);
        } else if (nivel == 2) {
            ButtonCadastro.setEnabled(true);
        } else if (nivel == 3) {
            ButtonCadastro.setEnabled(true);
        }
    }

    /**
     * Creates new form Cadastre
     */
    public Cadastre() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        ButtonCadastro = new javax.swing.JButton();
        botaoPDF = new javax.swing.JButton();
        Buscar = new javax.swing.JButton();
        ButtonAlterar = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        PEstado = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        PCidade = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        PBairro = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        PRua = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        TContato = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        TData_Nascimento = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        TCpf = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        TNome = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        Selector = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        TMatricula = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        TPeriodo = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        TData_Admissao = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        PCargoChefia = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        PCargoCoordenacao = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        TSalario_Bruto = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        TProfissao = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        TCursoAnterior = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        TCursoAtual = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        TFaixaSalarial = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        botaoVoltar = new javax.swing.JButton();
        ButtonListar2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Tela de Cadastro");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setType(java.awt.Window.Type.UTILITY);

        jPanel1.setBackground(new java.awt.Color(50, 178, 195));

        ButtonCadastro.setBackground(new java.awt.Color(234, 210, 115));
        ButtonCadastro.setFont(new java.awt.Font("Ubuntu", 1, 16)); // NOI18N
        ButtonCadastro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ementor/icons8-crie-um-novo-25.png"))); // NOI18N
        ButtonCadastro.setText("   Cadastrar");
        ButtonCadastro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonCadastroActionPerformed(evt);
            }
        });

        botaoPDF.setBackground(new java.awt.Color(244, 240, 231));
        botaoPDF.setFont(new java.awt.Font("Ubuntu", 1, 16)); // NOI18N
        botaoPDF.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ementor/icons8-pdf-25.png"))); // NOI18N
        botaoPDF.setText("   Emitir PDF");
        botaoPDF.setActionCommand("   Voltar");
        botaoPDF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoPDFActionPerformed(evt);
            }
        });

        Buscar.setBackground(new java.awt.Color(244, 240, 231));
        Buscar.setFont(new java.awt.Font("Ubuntu", 1, 16)); // NOI18N
        Buscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ementor/icons8-pesquisar-25.png"))); // NOI18N
        Buscar.setText("   Buscar por CPF");
        Buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BuscarActionPerformed(evt);
            }
        });

        ButtonAlterar.setBackground(new java.awt.Color(244, 240, 231));
        ButtonAlterar.setFont(new java.awt.Font("Liberation Sans", 1, 16)); // NOI18N
        ButtonAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ementor/icons8-actualizar-24.png"))); // NOI18N
        ButtonAlterar.setText("   Alterar");
        ButtonAlterar.setEnabled(false);
        ButtonAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonAlterarActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(244, 240, 231));

        jLabel14.setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N
        jLabel14.setText("Estado");
        jLabel14.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel13.setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N
        jLabel13.setText("Cidade");
        jLabel13.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel12.setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N
        jLabel12.setText("Bairro");
        jLabel12.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel11.setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N
        jLabel11.setText("Rua");
        jLabel11.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel4.setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N
        jLabel4.setText("Contato");
        jLabel4.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        TData_Nascimento.setToolTipText("");
        TData_Nascimento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TData_NascimentoActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N
        jLabel3.setText("Data de Nascimento");
        jLabel3.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        TCpf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TCpfActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N
        jLabel2.setText("CPF");
        jLabel2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel1.setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N
        jLabel1.setText("Nome");
        jLabel1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        Selector.setFont(new java.awt.Font("Ubuntu", 1, 16)); // NOI18N
        Selector.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione uma opção", "Pessoa", "Aluno", "Professor", "Egresso" }));
        Selector.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SelectorActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N
        jLabel5.setText("Matrícula");

        jLabel6.setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N
        jLabel6.setText("Período");
        jLabel6.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel7.setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N
        jLabel7.setText("Data Admissão");
        jLabel7.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        TData_Admissao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TData_AdmissaoActionPerformed(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N
        jLabel16.setText("Cargo Chefia");
        jLabel16.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel15.setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N
        jLabel15.setText("Cargo Coordenação");
        jLabel15.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel8.setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N
        jLabel8.setText("Salário bruto");
        jLabel8.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel18.setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N
        jLabel18.setText("Profissão");

        TProfissao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TProfissaoActionPerformed(evt);
            }
        });

        jLabel19.setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N
        jLabel19.setText("Curso Anterior");

        jLabel17.setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N
        jLabel17.setText("Curso Atual");

        jLabel20.setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N
        jLabel20.setText("Faixa Salarial");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(Selector, 0, 260, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(PRua)
                            .addComponent(TData_Nascimento, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(TCpf, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(TNome, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(TContato, javax.swing.GroupLayout.DEFAULT_SIZE, 260, Short.MAX_VALUE))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel14)
                            .addComponent(jLabel13)
                            .addComponent(PBairro)
                            .addComponent(PCidade)
                            .addComponent(PEstado, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 260, Short.MAX_VALUE))
                        .addComponent(jLabel12)
                        .addComponent(jLabel11)))
                .addGap(87, 87, 87)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(TPeriodo)
                    .addComponent(TMatricula)
                    .addComponent(PCargoChefia)
                    .addComponent(TData_Admissao, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(PCargoCoordenacao, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(TSalario_Bruto, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel15)
                            .addComponent(jLabel7)
                            .addComponent(jLabel16)
                            .addComponent(jLabel6)
                            .addComponent(jLabel5))
                        .addGap(0, 169, Short.MAX_VALUE)))
                .addGap(53, 53, 53)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel20)
                    .addComponent(jLabel18)
                    .addComponent(jLabel17)
                    .addComponent(jLabel19)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(TCursoAnterior, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(TCursoAtual, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(TProfissao, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(TFaixaSalarial, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(Selector, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(TNome, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(TCpf, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(TData_Nascimento, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(TContato, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(PRua, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(PBairro, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel13)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(PCidade, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel14)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(PEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel7)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(TData_Admissao, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel16)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(PCargoChefia, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel18)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(TProfissao, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel19)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(TCursoAnterior, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel17)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(TCursoAtual, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel20)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(TFaixaSalarial, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel15)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(PCargoCoordenacao, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(TSalario_Bruto, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(TMatricula, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(TPeriodo, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );

        TMatricula.getAccessibleContext().setAccessibleName("");

        jLabel21.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ementor/logo2_pronta.png"))); // NOI18N

        botaoVoltar.setBackground(new java.awt.Color(240, 182, 182));
        botaoVoltar.setFont(new java.awt.Font("Ubuntu", 1, 16)); // NOI18N
        botaoVoltar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ementor/icons8-esquerda-25.png"))); // NOI18N
        botaoVoltar.setText("Voltar");
        botaoVoltar.setActionCommand("   Voltar");
        botaoVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoVoltarActionPerformed(evt);
            }
        });

        ButtonListar2.setBackground(new java.awt.Color(244, 240, 231));
        ButtonListar2.setFont(new java.awt.Font("Ubuntu", 1, 16)); // NOI18N
        ButtonListar2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ementor/icons8-lista-25.png"))); // NOI18N
        ButtonListar2.setText("   Listar");
        ButtonListar2.setActionCommand("   Voltar");
        ButtonListar2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonListar2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(74, 74, 74)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(ButtonAlterar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Buscar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(botaoPDF, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ButtonCadastro, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ButtonListar2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(71, 71, 71))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(106, 106, 106)
                        .addComponent(botaoVoltar, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel21)
                .addGap(18, 18, 18)
                .addComponent(Buscar, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(ButtonListar2, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addComponent(botaoPDF, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(ButtonAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(ButtonCadastro, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(54, 54, 54)
                .addComponent(botaoVoltar, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(64, 64, 64))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void TData_NascimentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TData_NascimentoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TData_NascimentoActionPerformed

    private void TData_AdmissaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TData_AdmissaoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TData_AdmissaoActionPerformed

    private void SelectorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SelectorActionPerformed
        if (Selector.getSelectedIndex() == 0) {

            ButtonAlterar.setEnabled(false);

            TNome.setText("");
            TData_Nascimento.setText("");
            TContato.setText("");
            TData_Admissao.setText("");
            TSalario_Bruto.setText("");
            TMatricula.setText("");
            TPeriodo.setText("");
            TCpf.setText("");

            PRua.setText("");
            PBairro.setText("");
            PCidade.setText("");
            PEstado.setText("");
        }
        if (Selector.getSelectedIndex() == 1) {
            jLabel1.setVisible(true);
            TNome.setVisible(true);
            jLabel2.setVisible(true);
            TCpf.setVisible(true);
            jLabel3.setVisible(true);
            TData_Nascimento.setVisible(true);
            jLabel4.setVisible(true);
            TContato.setVisible(true);
            jLabel11.setVisible(true);
            PRua.setVisible(true);
            jLabel12.setVisible(true);
            PBairro.setVisible(true);
            jLabel13.setVisible(true);
            PCidade.setVisible(true);
            jLabel14.setVisible(true);
            PEstado.setVisible(true);

            jLabel5.setVisible(false);
            TMatricula.setVisible(false);
            jLabel6.setVisible(false);
            TPeriodo.setVisible(false);

            jLabel7.setVisible(false);
            TData_Admissao.setVisible(false);
            jLabel8.setVisible(false);
            TSalario_Bruto.setVisible(false);

            jLabel15.setVisible(false);
            PCargoChefia.setVisible(false);
            jLabel16.setVisible(false);
            PCargoCoordenacao.setVisible(false);

            jLabel18.setVisible(false);
            TProfissao.setVisible(false);
            jLabel19.setVisible(false);
            TCursoAnterior.setVisible(false);
            jLabel17.setVisible(false);
            TCursoAtual.setVisible(false);
            jLabel20.setVisible(false);
            TFaixaSalarial.setVisible(false);

            TNome.setText("");
            TData_Nascimento.setText("");
            TContato.setText("");
            TData_Admissao.setText("");
            TSalario_Bruto.setText("");
            TMatricula.setText("");
            TPeriodo.setText("");
            TCpf.setText("");

            PRua.setText("");
            PBairro.setText("");
            PCidade.setText("");
            PEstado.setText("");
        }
        if (Selector.getSelectedIndex() == 2) {
            jLabel1.setVisible(true);
            TNome.setVisible(true);
            jLabel2.setVisible(true);
            TCpf.setVisible(true);
            jLabel3.setVisible(true);
            TData_Nascimento.setVisible(true);
            jLabel4.setVisible(true);
            TContato.setVisible(true);
            jLabel11.setVisible(true);
            PRua.setVisible(true);
            jLabel12.setVisible(true);
            PBairro.setVisible(true);
            jLabel13.setVisible(true);
            PCidade.setVisible(true);
            jLabel14.setVisible(true);
            PEstado.setVisible(true);

            jLabel5.setVisible(true);
            TMatricula.setVisible(true);
            jLabel6.setVisible(true);
            TPeriodo.setVisible(true);

            jLabel7.setVisible(false);
            TData_Admissao.setVisible(false);
            jLabel8.setVisible(false);
            TSalario_Bruto.setVisible(false);

            jLabel15.setVisible(false);
            PCargoChefia.setVisible(false);
            jLabel16.setVisible(false);
            PCargoCoordenacao.setVisible(false);

            ButtonAlterar.setEnabled(false);

            jLabel18.setVisible(false);
            TProfissao.setVisible(false);
            jLabel19.setVisible(false);
            TCursoAnterior.setVisible(false);
            jLabel17.setVisible(false);
            TCursoAtual.setVisible(false);
            jLabel20.setVisible(false);
            TFaixaSalarial.setVisible(false);

            TNome.setText("");
            TData_Nascimento.setText("");
            TContato.setText("");
            TData_Admissao.setText("");
            TSalario_Bruto.setText("");
            TMatricula.setText("");
            TPeriodo.setText("");
            TCpf.setText("");

            PRua.setText("");
            PBairro.setText("");
            PCidade.setText("");
            PEstado.setText("");
        }
        if (Selector.getSelectedIndex() == 3) {
            jLabel1.setVisible(true);
            TNome.setVisible(true);
            jLabel2.setVisible(true);
            TCpf.setVisible(true);
            jLabel3.setVisible(true);
            TData_Nascimento.setVisible(true);
            jLabel4.setVisible(true);
            TContato.setVisible(true);
            jLabel11.setVisible(true);
            PRua.setVisible(true);
            jLabel12.setVisible(true);
            PBairro.setVisible(true);
            jLabel13.setVisible(true);
            PCidade.setVisible(true);
            jLabel14.setVisible(true);
            PEstado.setVisible(true);

            jLabel5.setVisible(false);
            TMatricula.setVisible(false);
            jLabel6.setVisible(false);
            TPeriodo.setVisible(false);

            jLabel7.setVisible(true);
            TData_Admissao.setVisible(true);
            jLabel8.setVisible(true);
            TSalario_Bruto.setVisible(true);
            jLabel15.setVisible(true);
            PCargoChefia.setVisible(true);
            jLabel16.setVisible(true);
            PCargoCoordenacao.setVisible(true);

            ButtonAlterar.setEnabled(false);

            jLabel18.setVisible(false);
            TProfissao.setVisible(false);
            jLabel19.setVisible(false);
            TCursoAnterior.setVisible(false);
            jLabel17.setVisible(false);
            TCursoAtual.setVisible(false);
            jLabel20.setVisible(false);
            TFaixaSalarial.setVisible(false);

            TNome.setText("");
            TData_Nascimento.setText("");
            TContato.setText("");
            TData_Admissao.setText("");
            TSalario_Bruto.setText("");
            TMatricula.setText("");
            TPeriodo.setText("");
            TCpf.setText("");

            PRua.setText("");
            PBairro.setText("");
            PCidade.setText("");
            PEstado.setText("");
        }
        if (Selector.getSelectedIndex() == 4) {
            jLabel1.setVisible(false);
            TNome.setVisible(false);
            jLabel2.setVisible(false);
            TCpf.setVisible(false);
            jLabel3.setVisible(false);
            TData_Nascimento.setVisible(false);
            jLabel4.setVisible(false);
            TContato.setVisible(false);
            jLabel11.setVisible(false);
            PRua.setVisible(false);
            jLabel12.setVisible(false);
            PBairro.setVisible(false);
            jLabel13.setVisible(false);
            PCidade.setVisible(false);
            jLabel14.setVisible(false);
            PEstado.setVisible(false);

            jLabel5.setVisible(true);
            TMatricula.setVisible(true);
            jLabel6.setVisible(false);
            TPeriodo.setVisible(false);

            jLabel7.setVisible(false);
            TData_Admissao.setVisible(false);
            jLabel8.setVisible(false);
            TSalario_Bruto.setVisible(false);

            jLabel15.setVisible(false);
            PCargoChefia.setVisible(false);
            jLabel16.setVisible(false);
            PCargoCoordenacao.setVisible(false);

            jLabel18.setVisible(true);
            TProfissao.setVisible(true);
            jLabel19.setVisible(true);
            TCursoAnterior.setVisible(true);
            jLabel17.setVisible(true);
            TCursoAtual.setVisible(true);
            jLabel20.setVisible(true);
            TFaixaSalarial.setVisible(true);

            ButtonAlterar.setEnabled(false);

            TNome.setText("");
            TData_Nascimento.setText("");
            TContato.setText("");
            TData_Admissao.setText("");
            TSalario_Bruto.setText("");
            TMatricula.setText("");
            TPeriodo.setText("");
            TCpf.setText("");

            PRua.setText("");
            PBairro.setText("");
            PCidade.setText("");
            PEstado.setText("");
        }
    }//GEN-LAST:event_SelectorActionPerformed

    private void ButtonCadastroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonCadastroActionPerformed
        if (Selector.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(null, "Nenhuma opção foi selecionada!", "ERRO", JOptionPane.ERROR_MESSAGE);
        }
        if (Selector.getSelectedIndex() == 1) {
            if (TNome.getText().isEmpty() || TCpf.getText().isEmpty() || TContato.getText().isEmpty() || TData_Nascimento.getText().isEmpty() || PRua.getText().isEmpty() || PBairro.getText().isEmpty() || PCidade.getText().isEmpty() || PEstado.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Dados de cadastro incompletos!", "ERRO", JOptionPane.ERROR_MESSAGE);
            } else {
                long CPF = Long.parseLong(TCpf.getText());

                ConexoesMySQL conec = new ConexoesMySQL();
                conec.insereDadosPessoaNoMySQL(TNome.getText(), CPF, TContato.getText(), TData_Nascimento.getText(), PRua.getText(), PBairro.getText(), PCidade.getText(), PEstado.getText());
            }
        }
        if (Selector.getSelectedIndex() == 2) {
            if (TCpf.getText().isEmpty() || TMatricula.getText().isEmpty() || TPeriodo.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Dados de cadastro incompletos!", "ERRO", JOptionPane.ERROR_MESSAGE);
            } else {
                int Matricula = Integer.parseInt(TMatricula.getText());
                int Periodo = Integer.parseInt(TPeriodo.getText());
                long CPF = Long.parseLong(TCpf.getText());

                ConexoesMySQL conec = new ConexoesMySQL();
                conec.insereDadosAlunoNoMySQL(TNome.getText(), CPF, Matricula, Periodo, TContato.getText(), TData_Nascimento.getText(), PRua.getText(), PBairro.getText(), PCidade.getText(), PEstado.getText());
            }
        }
        if (Selector.getSelectedIndex() == 3) {
            if (TCpf.getText().isEmpty() || TData_Admissao.getText().isEmpty() || PCargoChefia.getText().isEmpty() || PCargoCoordenacao.getText().isEmpty() || TSalario_Bruto.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Dados de cadastro incompletos!", "ERRO", JOptionPane.ERROR_MESSAGE);
            } else {
                double Salario_bruto = Double.parseDouble(TSalario_Bruto.getText());
                long CPF = Long.parseLong(TCpf.getText());

                ConexoesMySQL conec = new ConexoesMySQL();
                conec.insereDadosProfessorNoMySQL(TNome.getText(), CPF, TData_Admissao.getText(), PCargoChefia.getText(), PCargoCoordenacao.getText(), Salario_bruto, TContato.getText(), TData_Nascimento.getText(), PRua.getText(), PBairro.getText(), PCidade.getText(), PEstado.getText());
            }
        }
        if (Selector.getSelectedIndex() == 4) {
            if (TMatricula.getText().isEmpty() || TProfissao.getText().isEmpty() || TCursoAnterior.getText().isEmpty() || TCursoAtual.getText().isEmpty() || TFaixaSalarial.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Dados de cadastro incompletos!", "ERRO", JOptionPane.ERROR_MESSAGE);
            } else {
                ConexoesMySQL conec = new ConexoesMySQL();
                conec.insereDadosEgressoNoMySQL(TMatricula.getText(), TProfissao.getText(), TCursoAnterior.getText(), TCursoAtual.getText(), TFaixaSalarial.getText());
            }
        }
    }//GEN-LAST:event_ButtonCadastroActionPerformed

    private void ButtonAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonAlterarActionPerformed
        if (Selector.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(null, "Nenhuma opção foi selecionada!", "ERRO", JOptionPane.ERROR_MESSAGE);
        }
        if (Selector.getSelectedIndex() == 1) {
            ConexoesMySQL conec = new ConexoesMySQL();
            conec.atualizaDadosPessoaNoMySQL(TCpf.getText(), TContato.getText(), PRua.getText(), PBairro.getText(), PCidade.getText(), PEstado.getText());
        }
        if (Selector.getSelectedIndex() == 2) {
            ConexoesMySQL conec = new ConexoesMySQL();
            conec.atualizaDadosAlunoNoMySQL(TCpf.getText(), TMatricula.getText(), TPeriodo.getText(), TContato.getText(), PRua.getText(), PBairro.getText(), PCidade.getText(), PEstado.getText());
        }
        if (Selector.getSelectedIndex() == 3) {
            double Salario_bruto = Double.parseDouble(TSalario_Bruto.getText());
            ConexoesMySQL conec = new ConexoesMySQL();
            conec.atualizaDadosProfessorNoMySQL(TCpf.getText(), TData_Admissao.getText(), Salario_bruto, PCargoChefia.getText(), PCargoCoordenacao.getText(), TContato.getText(), PRua.getText(), PBairro.getText(), PCidade.getText(), PEstado.getText());
        }
        if (Selector.getSelectedIndex() == 4) {
            ConexoesMySQL conec = new ConexoesMySQL();
            conec.atualizaDadosEgressoNoMySQL(TMatricula.getText(), TProfissao.getText(), TCursoAnterior.getText(), TCursoAtual.getText(), TFaixaSalarial.getText());
        }
    }//GEN-LAST:event_ButtonAlterarActionPerformed

    private void botaoPDFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoPDFActionPerformed
if (Selector.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(null, "Nenhuma opção foi selecionada!", "ERRO", JOptionPane.ERROR_MESSAGE);
        } else if (Selector.getSelectedIndex() == 1) {
            Document document = new Document();
            try {
                PdfWriter.getInstance(document, new FileOutputStream("Pessoa.pdf"));
                document.open();

                Date data = new Date();
                DateFormat formatador = DateFormat.getDateInstance(DateFormat.FULL);
                document.add(new Paragraph("Data da pesquisa: " +formatador.format(data)));
                document.add(new Paragraph("Listagem de Pessoas: "));
                document.add(new Paragraph("   "));

                PdfPTable tabela = new PdfPTable(8);
                PdfPCell col1 = new PdfPCell(new Paragraph("Nome"));
                tabela.addCell(col1);
                PdfPCell col2 = new PdfPCell(new Paragraph("CPF"));
                tabela.addCell(col2);
                PdfPCell col3 = new PdfPCell(new Paragraph("Data de Nascimento"));
                tabela.addCell(col3);
                PdfPCell col4 = new PdfPCell(new Paragraph("Telefone"));
                tabela.addCell(col4);
                PdfPCell col5 = new PdfPCell(new Paragraph("Rua"));
                tabela.addCell(col5);
                PdfPCell col6 = new PdfPCell(new Paragraph("Bairro"));
                tabela.addCell(col6);
                PdfPCell col7 = new PdfPCell(new Paragraph("Cidade"));
                tabela.addCell(col7);
                PdfPCell col8 = new PdfPCell(new Paragraph("UF"));
                tabela.addCell(col8);

                ArrayList<Pessoa> ListarPessoa = new ArrayList();
                ConexoesMySQL conec = new ConexoesMySQL();
                ListarPessoa = conec.recuperaDadosPessoaDoMySQL("Nome");
                for (Pessoa obj : ListarPessoa) {
                    tabela.addCell(obj.nome);
                    tabela.addCell(String.valueOf(obj.CPF));
                    tabela.addCell(obj.data_nascimento);
                    tabela.addCell(obj.telefone);
                    tabela.addCell(obj.rua);
                    tabela.addCell(obj.bairro);
                    tabela.addCell(obj.cidade);
                    tabela.addCell(obj.estado);
                }

                document.add(tabela);

            } catch (Exception e) {
                System.out.println(e);
            } finally {
                document.close();
            }
            
            try {
                Desktop.getDesktop().open(new File("Pessoa.pdf"));
            } catch (Exception e2) {
                System.out.println(e2);
            }
        } else if (Selector.getSelectedIndex() == 2) {
            Document document = new Document();
            try {
                PdfWriter.getInstance(document, new FileOutputStream("Aluno.pdf"));
                document.open();

                Date data = new Date();
                DateFormat formatador = DateFormat.getDateInstance(DateFormat.FULL);
                document.add(new Paragraph("Data da pesquisa: " +formatador.format(data)));
                document.add(new Paragraph("Listagem de alunos"));
                document.add(new Paragraph("   "));

                PdfPTable tabela = new PdfPTable(6);
                PdfPCell col1 = new PdfPCell(new Paragraph("Nome"));
                tabela.addCell(col1);
                PdfPCell col2 = new PdfPCell(new Paragraph("CPF"));
                tabela.addCell(col2);
                PdfPCell col3 = new PdfPCell(new Paragraph("Data de Nascimento"));
                tabela.addCell(col3);
                PdfPCell col4 = new PdfPCell(new Paragraph("Telefone"));
                tabela.addCell(col4);
                PdfPCell col5 = new PdfPCell(new Paragraph("Matricula"));
                tabela.addCell(col5);
                PdfPCell col6 = new PdfPCell(new Paragraph("Período"));
                tabela.addCell(col6);

                ArrayList<Aluno> ListaAlunos = new ArrayList();
                ConexoesMySQL conec = new ConexoesMySQL();
                ListaAlunos = conec.recuperaDadosAlunoDoMySQL("Nome");
                for (Aluno obj : ListaAlunos) {
                    tabela.addCell(obj.nome);
                    tabela.addCell(String.valueOf(obj.CPF));
                    tabela.addCell(obj.data_nascimento);
                    tabela.addCell(obj.telefone);
                    tabela.addCell(String.valueOf(obj.matricula));
                    tabela.addCell(String.valueOf(obj.periodo));
                }

                document.add(tabela);

            } catch (Exception e) {
                System.out.println(e);
            } finally {
                document.close();
            }
            
            try {
                Desktop.getDesktop().open(new File("Aluno.pdf"));
            } catch (Exception e2) {
                System.out.println(e2);
            }
        } else if (Selector.getSelectedIndex() == 3) {
            Document document = new Document();
            try {
                PdfWriter.getInstance(document, new FileOutputStream("Professor.pdf"));
                document.open();

                Date data = new Date();
                DateFormat formatador = DateFormat.getDateInstance(DateFormat.FULL);
                document.add(new Paragraph("Data da pesquisa: " +formatador.format(data)));
                document.add(new Paragraph("Listagem de Professores: "));
                document.add(new Paragraph("   "));

                PdfPTable tabela = new PdfPTable(8);
                PdfPCell col1 = new PdfPCell(new Paragraph("Nome"));
                tabela.addCell(col1);
                PdfPCell col2 = new PdfPCell(new Paragraph("CPF"));
                tabela.addCell(col2);
                PdfPCell col3 = new PdfPCell(new Paragraph("Data de Nascimento"));
                tabela.addCell(col3);
                PdfPCell col4 = new PdfPCell(new Paragraph("Telefone"));
                tabela.addCell(col4);
                PdfPCell col5 = new PdfPCell(new Paragraph("Data Admissão"));
                tabela.addCell(col5);
                PdfPCell col6 = new PdfPCell(new Paragraph("Salario Bruto"));
                tabela.addCell(col6);
                PdfPCell col7 = new PdfPCell(new Paragraph("Coordenação"));
                tabela.addCell(col7);
                PdfPCell col8 = new PdfPCell(new Paragraph("Chefia"));
                tabela.addCell(col8);

                ArrayList<Professor> ListaProfessor = new ArrayList();
                ConexoesMySQL conec = new ConexoesMySQL();
                ListaProfessor = conec.recuperaDadosProfessorDoMySQL("Nome");
                for (Professor obj : ListaProfessor) {
                    tabela.addCell(obj.nome);
                    tabela.addCell(String.valueOf(obj.CPF));
                    tabela.addCell(obj.data_nascimento);
                    tabela.addCell(obj.telefone);
                    tabela.addCell(obj.getData_admissao());
                    tabela.addCell(String.valueOf(obj.getSalario_bruto()));
                    tabela.addCell(String.valueOf(obj.isCargoCoordenador()));
                    tabela.addCell(String.valueOf(obj.isCargoCoordenador()));
                }

                document.add(tabela);

            } catch (Exception e) {
                System.out.println(e);
            } finally {
                document.close();
            }
            
            try {
                Desktop.getDesktop().open(new File("Professor.pdf"));
            } catch (Exception e2) {
                System.out.println(e2);
            }
        } else if (Selector.getSelectedIndex() == 4) {
            Document document = new Document();
            try {
                PdfWriter.getInstance(document, new FileOutputStream("Egresso.pdf"));
                document.open();

                Date data = new Date();
                DateFormat formatador = DateFormat.getDateInstance(DateFormat.FULL);
                document.add(new Paragraph("Data da pesquisa: " +formatador.format(data)));
                document.add(new Paragraph("Listagem de Egressos"));
                document.add(new Paragraph("   "));

                PdfPTable tabela = new PdfPTable(5);
                PdfPCell col1 = new PdfPCell(new Paragraph("Matricula"));
                tabela.addCell(col1);
                PdfPCell col2 = new PdfPCell(new Paragraph("Profissao"));
                tabela.addCell(col2);
                PdfPCell col3 = new PdfPCell(new Paragraph("Curso Anterior"));
                tabela.addCell(col3);
                PdfPCell col4 = new PdfPCell(new Paragraph("Curso Atual"));
                tabela.addCell(col4);
                PdfPCell col5 = new PdfPCell(new Paragraph("Faixa Salarial"));
                tabela.addCell(col5);

                ArrayList<Egresso> ListaEgresso = new ArrayList();
                ConexoesMySQL conec = new ConexoesMySQL();
                ListaEgresso = conec.recuperaDadosEgressoDoMySQL();
                for (Egresso obj : ListaEgresso) {
                    tabela.addCell(String.valueOf(obj.matricula));
                    tabela.addCell(obj.profissao_atual);
                    tabela.addCell(obj.curso_anterior);
                    tabela.addCell(obj.curso_atual);
                    tabela.addCell(String.valueOf(obj.faixa_salarial));
                }

                document.add(tabela);

            } catch (Exception e) {
                System.out.println(e);
            } finally {
                document.close();
            }
            
            try {
                Desktop.getDesktop().open(new File("Egresso.pdf"));
            } catch (Exception e2) {
                System.out.println(e2);
            }
        }

    }//GEN-LAST:event_botaoPDFActionPerformed

    private void BuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BuscarActionPerformed
        if (Selector.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(null, "Nenhuma opção foi selecionada!", "ERRO", JOptionPane.ERROR_MESSAGE);
        }
        if (Selector.getSelectedIndex() == 1) {
            ConexoesMySQL conec = new ConexoesMySQL();
            Pessoa pessoa = null;

            if (TCpf.getText() != "") {
                pessoa = conec.buscaPessoa(TCpf.getText());
                if(conec.recuperaNivel() == 1){
                    ButtonAlterar.setEnabled(false);
                }else {
                    ButtonAlterar.setEnabled(true);
                }
                
            }

            if (pessoa == null) {
                JOptionPane.showMessageDialog(null, "Pessoa não encontrada!", "ERRO", JOptionPane.ERROR_MESSAGE);
            } else {

                TNome.setText(pessoa.getNome());
                TData_Nascimento.setText(pessoa.getData_nascimento());
                TContato.setText(pessoa.getTelefone());
                PRua.setText(pessoa.getRua());
                PBairro.setText(pessoa.getBairro());
                PCidade.setText(pessoa.getCidade());
                PEstado.setText(pessoa.getEstado());
            }
        }
        if (Selector.getSelectedIndex() == 2) {
            ConexoesMySQL conec = new ConexoesMySQL();
            Aluno aluno = null;

            if (TCpf.getText() != "") {
                aluno = conec.buscaAluno(TCpf.getText());
                if(conec.recuperaNivel() == 1){
                    ButtonAlterar.setEnabled(false);
                }else {
                    ButtonAlterar.setEnabled(true);
                }
            }   

            if (aluno == null) {
                JOptionPane.showMessageDialog(null, "Aluno não encontrado!", "ERRO", JOptionPane.ERROR_MESSAGE);
            } else {
                String Matricula = String.valueOf(aluno.getMatricula());
                String Periodo = String.valueOf(aluno.getPeriodo());

                TNome.setText(aluno.getNome());
                TData_Nascimento.setText(aluno.getData_nascimento());
                TContato.setText(aluno.getTelefone());
                TMatricula.setText(Matricula);
                TPeriodo.setText(Periodo);

                PRua.setText(aluno.getRua());
                PBairro.setText(aluno.getBairro());
                PCidade.setText(aluno.getCidade());
                PEstado.setText(aluno.getEstado());
            }
        }
        if (Selector.getSelectedIndex() == 3) {
            ConexoesMySQL conec = new ConexoesMySQL();
            Professor professor = null;
            if (TCpf.getText() != "") {
                professor = conec.buscaProfessor(TCpf.getText());
                if(conec.recuperaNivel() == 1){
                    ButtonAlterar.setEnabled(false);
                }else {
                    ButtonAlterar.setEnabled(true);
                }
                
            }

            if (professor == null) {
                JOptionPane.showMessageDialog(null, "Professor não encontrado!", "ERRO", JOptionPane.ERROR_MESSAGE);
            } else {
                String Data_admissao = String.valueOf(professor.getData_admissao());
                String Salario_bruto = String.valueOf(professor.getSalario_bruto());
                String CargoChefia = String.valueOf(professor.CargoChefia);
                String CargoCoordenacao = String.valueOf(professor.CargoCoordenador);

                TNome.setText(professor.getNome());
                TData_Nascimento.setText(professor.getData_nascimento());
                TContato.setText(professor.getTelefone());
                TData_Admissao.setText(Data_admissao);
                TSalario_Bruto.setText(Salario_bruto);
                PCargoChefia.setText(CargoChefia);
                PCargoCoordenacao.setText(CargoCoordenacao);

                PRua.setText(professor.getRua());
                PBairro.setText(professor.getBairro());
                PCidade.setText(professor.getCidade());
                PEstado.setText(professor.getEstado());
            }
        }
        if (Selector.getSelectedIndex() == 4) {
            ConexoesMySQL conec = new ConexoesMySQL();
            Egresso egresso = null;

            if (TMatricula.getText() != "") {
                egresso = conec.buscaEgresso(TMatricula.getText());
                if(conec.recuperaNivel() == 1){
                    ButtonAlterar.setEnabled(false);
                }else {
                    ButtonAlterar.setEnabled(true);
                }
                
            }

            if (egresso == null) {
                JOptionPane.showMessageDialog(null, "Egresso não encontrado!", "ERRO", JOptionPane.ERROR_MESSAGE);
            } else {
                String Matricula = String.valueOf(egresso.getMatricula());

                TMatricula.setText(Matricula);

                TProfissao.setText(egresso.getProfissao_atual());
                TCursoAnterior.setText(egresso.getCurso_anterior());
                TCursoAtual.setText(egresso.getCurso_atual());
                TFaixaSalarial.setText(egresso.getFaixa_salarial());
            }
        }
    }//GEN-LAST:event_BuscarActionPerformed

    private void TCpfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TCpfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TCpfActionPerformed

    private void TProfissaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TProfissaoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TProfissaoActionPerformed

    private void botaoVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoVoltarActionPerformed
        Menu menu = new Menu();
        menu.setVisible(true);
        setVisible(false);
        menu.niveis();
    }//GEN-LAST:event_botaoVoltarActionPerformed

    private void ButtonListar2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonListar2ActionPerformed
        if (Selector.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(null, "Nenhuma opção foi selecionada!", "ERRO", JOptionPane.ERROR_MESSAGE);
        }
        if (Selector.getSelectedIndex() == 1) {
            TabelaPessoas newTabela = new TabelaPessoas();
            newTabela.setVisible(true);
        }
        if (Selector.getSelectedIndex() == 2) {
            TabelaAlunos newTabela = new TabelaAlunos();
            newTabela.setVisible(true);
        }
        if (Selector.getSelectedIndex() == 3) {
            TabelaProfessores newTabela = new TabelaProfessores();
            newTabela.setVisible(true);
        }
        if (Selector.getSelectedIndex() == 4) {
            TabelaEgressos newTabela = new TabelaEgressos();
            newTabela.setVisible(true);
        }
    }//GEN-LAST:event_ButtonListar2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Cadastre.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Cadastre.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Cadastre.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Cadastre.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Cadastre().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Buscar;
    private javax.swing.JButton ButtonAlterar;
    private javax.swing.JButton ButtonCadastro;
    private javax.swing.JButton ButtonListar2;
    private javax.swing.JTextField PBairro;
    private javax.swing.JTextField PCargoChefia;
    private javax.swing.JTextField PCargoCoordenacao;
    private javax.swing.JTextField PCidade;
    private javax.swing.JTextField PEstado;
    private javax.swing.JTextField PRua;
    protected static javax.swing.JComboBox<String> Selector;
    private javax.swing.JTextField TContato;
    private javax.swing.JTextField TCpf;
    private javax.swing.JTextField TCursoAnterior;
    private javax.swing.JTextField TCursoAtual;
    private javax.swing.JTextField TData_Admissao;
    private javax.swing.JTextField TData_Nascimento;
    private javax.swing.JTextField TFaixaSalarial;
    private javax.swing.JTextField TMatricula;
    private javax.swing.JTextField TNome;
    private javax.swing.JTextField TPeriodo;
    private javax.swing.JTextField TProfissao;
    private javax.swing.JTextField TSalario_Bruto;
    private javax.swing.JButton botaoPDF;
    private javax.swing.JButton botaoVoltar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    // End of variables declaration//GEN-END:variables
}
